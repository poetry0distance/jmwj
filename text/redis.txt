redis过期策略
定时过期：
	每个设置过期时间的key都需创建一个定时器，到过期时间就会立即清除。会占用cpu资源去处理，影响响应时间和吞吐量。
惰性过期：
	只有当访问一个key时，才会判断该key是否过期，过期才清除。存在大量过期key没有再次被访问。
定期过期：
	每隔一段时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。

Redis中同时使用了惰性过期和定期过期两种过期策略

redis内存淘汰策略：
noeviction：当内存不足以容纳新写入数据时，新写入操作会报错。
allkeys-lru：当内存不足以容纳新写入的数据时，在键空间中，移除最近最少使用的key。
allkeys-random：当内存不足以容纳新写入的数据时，在键空间中，随机移除某个key。
volatile-lru：当内存不足以容纳新写入的数据时，在设置了过期时间的键空间中，移除最近最少使用的key。
volatile-random：当内存不足以容纳新写入的数据时，在设置了过期时间的键空间中，随机移除某个key。
volatile-ttl：当内存不足以容纳新写入的数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除。



redis 跳表的时间复杂度和空间复杂度分析：log(n)

redis线程问题：
redis存储结构，数据类型：


redis源码解析：http://cmsblogs.com/?p=4570